apply plugin: 'com.android.library'
apply plugin:'maven'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.libMinSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName_lib

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //util
    //api 'com.blankj:utilcode:1.23.7'
    api ('com.blankj:utilcode:1.23.7'){transitive = true}
}


//uploadArchives {
//    configuration = configurations.archives
//    repositories {
//        mavenDeployer {
//            repository(url: 'http://192.168.1.146:8080/nexus/content/repositories/com.facility.wireless/') {
//                authentication(userName: 'admin', password: 'admin123')
//            }
//            pom.project {
//                version '1.0.0'
//                artifactId 'localone-debug'
//                groupId 'com.example.localone'
//                packaging 'aar'
//                description 'init version 1.0.0'
//            }
//        }
//    }
//}

ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "D:\\workResource\\mineAndroidDemo\\TestLoaclAarSecond\\localone"       //这里指定的就是刚刚新建项目后clone下来的在本地的路径
    PUBLISH_GROUP_ID = 'com.example.localone'
    PUBLISH_ARTIFACT_ID = 'localone-debug'
    PUBLISH_VERSION = '1.0.0'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION

        }
    }
}




// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}

